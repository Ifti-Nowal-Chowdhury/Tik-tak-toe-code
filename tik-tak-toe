#include <stdio.h>

char grid[3][3]; // The game grid

void initialize_grid() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            grid[i][j] = ' ';
        }
    }
}

void print_grid() {
    printf("\n");
    printf(" %c | %c | %c\n", grid[0][0], grid[0][1], grid[0][2]);
    printf("---+---+---\n");
    printf(" %c | %c | %c\n", grid[1][0], grid[1][1], grid[1][2]);
    printf("---+---+---\n");
    printf(" %c | %c | %c\n", grid[2][0], grid[2][1], grid[2][2]);
    printf("\n");
}

int check_winner() {
    // Check rows, columns, and diagonals for a win
    for (int i = 0; i < 3; i++) {
        if (grid[i][0] == grid[i][1] && grid[i][1] == grid[i][2] && grid[i][0] != ' ')
            return 1;
        if (grid[0][i] == grid[1][i] && grid[1][i] == grid[2][i] && grid[0][i] != ' ')
            return 1;
    }
    
    if (grid[0][0] == grid[1][1] && grid[1][1] == grid[2][2] && grid[0][0] != ' ')
        return 1;
    if (grid[0][2] == grid[1][1] && grid[1][1] == grid[2][0] && grid[0][2] != ' ')
        return 1;

    return 0;
}

int check_draw() {
    // Check if the grid is full (draw)
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (grid[i][j] == ' ')
                return 0; // Grid is not full yet
        }
    }
    return 1; // Grid is full (draw)
}

int main() {
    int row, col, player = 1, choice;

    initialize_grid();

    do {
        print_grid();
        player = (player % 2) ? 1 : 2;

        printf("Player %d, enter your move (row [0-2] and column [0-2]): ", player);
        scanf("%d %d", &row, &col);

        // Validate user input
        if (row < 0 || row > 2 || col < 0 || col > 2) {
            printf("Invalid input! Row and column should be in the range [0-2].\n");
            continue;
        }
        if (grid[row][col] != ' ') {
            printf("Invalid move! Cell already taken. Try again.\n");
            continue;
        }

        // Set the player's move on the grid
        grid[row][col] = (player == 1) ? 'X' : 'O';

        choice = check_winner();
        player++;
    } while (choice != 1 && check_draw() == 0);

    print_grid();

    if (choice == 1) {
        printf("Congratulations! Player %d wins!\n", --player);
    } else {
        printf("It's a draw!\n");
    }

    return 0;
}
